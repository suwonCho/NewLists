<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Function.form</name>
    </assembly>
    <members>
        <member name="T:Function.form.api">
            <summary>
            폼에서 사용할 api
            </summary>
        </member>
        <member name="M:Function.form.api.GetCursorPos(Function.form.api.POINT@)">
            <summary>
            마우스 커서 위치를 조회 한다.
            </summary>
            <param name="lpPoint"></param>
            <returns></returns>
        </member>
        <member name="T:Function.form.control">
            <summary>
            Form control 관련 클래스..
            </summary>
        </member>
        <member name="M:Function.form.control.find_Control(System.Windows.Forms.Control,System.String,System.Type)">
            <summary>
            폼에서 이름과 type이 일치하는 컨트롤을 찾는다.
            </summary>
            <param name="ctrl">폼에 아무 컨트롤을 넘긴다.</param>
            <param name="name">찾을 컨트롤 이름(string.Empty일경우 체크 않함)</param>
            <param name="type">찾을 컨트롤 type</param>
            <returns></returns>
        </member>
        <member name="M:Function.form.control.ProgramRunCheck(System.String)">
            <summary>
            중복 실행 체크 한다. 중복:false
            </summary>
            <param name="strProgramName"></param>		
            <returns>false이면 이미 실행, true이면 미실행</returns>
        </member>
        <member name="M:Function.form.control.MdiChildForm2Center(System.Windows.Forms.Form)">
            <summary>
            자식창을 부모창 중앙에 이동 시킨다.
            </summary>
            <param name="frm"></param>
        </member>
        <member name="M:Function.form.control.Control2Center(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>
            부모 컨트롤내에 자식컨트롤 위치를 중앙으로 이동 시킨다.
            </summary>
            <param name="frm"></param>
        </member>
        <member name="M:Function.form.control.FocuedControlFind(System.Windows.Forms.Form,System.Windows.Forms.Control)">
            <summary>
            폼이나 컨트롤내에 포커스를 가진 컨트롤을 찾아 낸다.
            </summary>
            <param name="frm"></param>
            <param name="ctrl"></param>
            <returns></returns>
        </member>
        <member name="M:Function.form.control.Invoke_Control_Enabled(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Control Enabled 값을 변경한다.
            </summary>
            <param name="txt"></param>
            <param name="isEnabled"></param>
        </member>
        <member name="M:Function.form.control.Invoke_Control_Text(System.Windows.Forms.Control,System.String)">
            <summary>
            Control에 TEXT를 변경한다.
            </summary>
            <param name="lbl"></param>
            <param name="strText"></param>
        </member>
        <member name="M:Function.form.control.Invoke_Control_Tag(System.Windows.Forms.Control,System.Object)">
            <summary>
            Control에 Tag를 변경한다.
            </summary>
            <param name="lbl"></param>
            <param name="tag"></param>
        </member>
        <member name="M:Function.form.control.Invoke_Control_TextAdd(System.Windows.Forms.Control,System.String,System.Boolean,System.Boolean)">
            <summary>
            Control에 TEXT를 추가/변경한다.
            </summary>
            <param name="txt"></param>
            <param name="strText"></param>
            <param name="isClear">기존 Text삭제 여부</param>
            <param name="isFront">Text추가시 앞부분에 추가 여부</param>
        </member>
        <member name="M:Function.form.control.Invoke_Control_Top(System.Windows.Forms.Control,System.Int32)">
            <summary>
            Control에 Top 값을 변경한다.
            </summary>
            <param name="ctl"></param>
            <param name="intTop"></param>
        </member>
        <member name="M:Function.form.control.Invoke_Control_Left(System.Windows.Forms.Control,System.Int32)">
            <summary>
            Control에 Left 값을 변경한다.
            </summary>
            <param name="ctl"></param>
            <param name="intLeft"></param>
        </member>
        <member name="M:Function.form.control.Invoke_Control_Width(System.Windows.Forms.Control,System.Int32)">
            <summary>
            Control에 Width 값을 변경한다.
            </summary>
            <param name="ctl"></param>
            <param name="intWidth"></param>
        </member>
        <member name="M:Function.form.control.Invoke_Control_Visible(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Control에 Visible을 변경한다.
            </summary>
            <param name="lbl"></param>
            <param name="isVisible"></param>
        </member>
        <member name="M:Function.form.control.Invoke_Control_ContextMenuStrip(System.Windows.Forms.Control,System.Windows.Forms.ContextMenuStrip)">
            <summary>
            Control에 ContextMenuStrip을 설정한다.
            </summary>
            <param name="ctrl"></param>
            <param name="menus"></param>
        </member>
        <member name="M:Function.form.control.Invoke_Control_Color(System.Windows.Forms.Control,System.Object,System.Object)">
            <summary>
            Control에 ForeColor / BackColor를 변경한다.
            </summary>
            <param name="ctl"></param>
            <param name="colFore">글자 색(null 입력시 변경 없음)</param>
            <param name="colBack">배경 색(null 입력시 변경 없음)</param>
        </member>
        <member name="M:Function.form.control.Invoke_Control_DataBindings_Add(System.Windows.Forms.Control,System.String,System.Object,System.String)">
            <summary>
            바인딩 추가..
            </summary>
            <param name="ctl"></param>
            <param name="strPropertyName"></param>
            <param name="objSource"></param>
            <param name="strDataMember"></param>
        </member>
        <member name="M:Function.form.control.Invoke_Control_Font(System.Windows.Forms.Control,System.Drawing.Font)">
            <summary>
            Control에 폰트를 변경한다.
            </summary>
            <param name="ctl"></param>
            <param name="ctlFont"></param>		
        </member>
        <member name="M:Function.form.control.Invoke_Control_ControlAdd(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>
            컨트롤에 컨트롤을 추가 하여준다.
            </summary>
            <param name="pnl"></param>
            <param name="ctl"></param>
        </member>
        <member name="M:Function.form.control.Invoke_Control_BrintToFront(System.Windows.Forms.Control)">
            <summary>
            컨트롤을 앞으로 이동 시킨다.
            </summary>
            <param name="ctl"></param>
        </member>
        <member name="M:Function.form.control.ControlInReset(System.Windows.Forms.Control)">
            <summary>
            그룹 않에 있는 컨트롤을 초기화 한다.
            </summary>
            <param name="ctl"></param>
        </member>
        <member name="M:Function.form.control.Invoke_Control_BringToFront(System.Windows.Forms.Control)">
            <summary>
            컨트롤의 z-order를 맨앞으로 한다.
            </summary>
            <param name="ctl"></param>
        </member>
        <member name="M:Function.form.control.Invoke_Control_Focus(System.Windows.Forms.Control)">
            <summary>
            컨트롤의 포커스를 가져간다.
            </summary>
            <param name="ctl"></param>
        </member>
        <member name="M:Function.form.control.Invoke_Form_ControlAdd(System.Windows.Forms.Form,System.Windows.Forms.Control)">
            <summary>
            퐄에 컨트롤을 추가 한다.
            </summary>
            <param name="frm"></param>
            <param name="ctl"></param>
        </member>
        <member name="M:Function.form.control.Invoke_Form_Opacity(System.Windows.Forms.Form,System.Double)">
            <summary>
            폼에 투명도를 변경한다.
            </summary>
            <param name="frm"></param>
            <param name="ctl"></param>
        </member>
        <member name="M:Function.form.control.Invoke_Form_Close(System.Windows.Forms.Form)">
            <summary>
            폼을 닫는다
            </summary>
            <param name="frm"></param>
            <param name="ctl"></param>
        </member>
        <member name="M:Function.form.control.Invoke_Form_Add_MdiChild(System.Windows.Forms.Form,System.Windows.Forms.Form,System.Boolean)">
            <summary>
            mdi 부모창에 자식창을 띄운다..
            </summary>
            <param name="frmMdi"></param>
            <param name="frmChild"></param>
            <param name="isCheckDuplication">중복체크 form에 text로 한다.</param>
        </member>
        <member name="M:Function.form.control.Form_Find_MdiChild(System.Windows.Forms.Form,System.Windows.Forms.Form)">
            <summary>
            폼 text로 부모창에서 자식 폼을 찾는다..
            </summary>
            <param name="frmMdi">부모 폼</param>
            <param name="frmChild">자식 폼</param>
            <returns></returns>
        </member>
        <member name="M:Function.form.control.Invoke_ListView_ItemClear(System.Windows.Forms.ListView)">
            <summary>
            listview에 item을 모두 제거 한다.
            </summary>
            <param name="lv"></param>
        </member>
        <member name="M:Function.form.control.Invoke_ListView_SelectedItemClear(System.Windows.Forms.ListView)">
            <summary>
            listview에 선택된 item을 모두 제거 한다.
            </summary>
            <param name="lv"></param>
        </member>
        <member name="M:Function.form.control.Invoke_DateTimePicker_Value(System.Windows.Forms.DateTimePicker,System.DateTime)">
            <summary>
            Control에 Visible을 변경한다.
            </summary>
            <param name="lbl"></param>
            <param name="isVisible"></param>
        </member>
        <member name="M:Function.form.control.Invoke_usrInputBox_Value(Function.form.usrInputBox,System.String)">
            <summary>
            Control에 Visible을 변경한다.
            </summary>
            <param name="lbl"></param>
            <param name="isVisible"></param>
        </member>
        <member name="M:Function.form.control.Invoke_ListView_AddItem(System.Windows.Forms.ListView,System.Boolean,System.Data.DataTable,System.String[])">
            <summary>
            listview에 datatable에서 item을 추가 한다.
            </summary>
            <param name="lv"></param>
            <param name="dt"></param>
            <param name="strColumn">datatabel 컬럼명 순서데로 filed 추가 : '__NO'는 count</param>
        </member>
        <member name="M:Function.form.control.Invoke_ListView_SubItem_Text(System.Windows.Forms.ListView,System.Windows.Forms.ListViewItem,System.Int32,System.String)">
            <summary>
            리스트 뷰의 서브아이템 text변경한다.
            </summary>
            <param name="lv"></param>
            <param name="li"></param>
            <param name="subitem_idx"></param>
            <param name="text"></param>
        </member>
        <member name="M:Function.form.control.Invoke_ListView_SubItem_Color(System.Windows.Forms.ListView,System.Windows.Forms.ListViewItem,System.Drawing.Color)">
            <summary>
            리스트 뷰의 서브아이템 Color변경한다.
            </summary>
            <param name="lv"></param>
            <param name="li"></param>
            <param name="subitem_idx"></param>
            <param name="text"></param>
        </member>
        <member name="M:Function.form.control.Invoke_ListView_AddItemString(System.Windows.Forms.ListView,System.Boolean,System.String[],System.Boolean,System.Int32)">
            <summary>
            ListView에 string 배열로 부터 item을 추가 한다.
            </summary>
            <param name="lv"></param>
            <param name="isClear">기존데이터 삭제 여부</param>
            <param name="strData">추가 데이터 string 배열</param>
            <param name="isToTop">listview에 위에 데이터 추가</param>
            <param name="intMaxRowCount">최대 item 숫자</param>
        </member>
        <member name="M:Function.form.control.Invoke_ListView_AddItemStringColor(System.Windows.Forms.ListView,System.Boolean,System.String[],System.Boolean,System.Int32,System.Object,System.Object)">
            <summary>
            string 배열로 부터 item을 추가 및 색상을 설정한다.
            </summary>
            <param name="lv"></param>
            <param name="isClear">기존데이터 삭제 여부</param>
            <param name="strData">추가 데이터 string 배열</param>
            <param name="isToTop">listview에 위에 데이터 추가</param>
            <param name="intMaxRowCount">최대 item 숫자</param>
            <param name="colForeColor">글자색 (null : 기본색)</param>
            <param name="colBackColor">배경색 (null : 기본색)</param>
        </member>
        <member name="M:Function.form.control.Invoke_ListView_ColumnHeader_Text(System.Windows.Forms.ListView,System.Windows.Forms.ColumnHeader,System.String)">
            <summary>
            listvivew에 컬럼해드 텍스트 변경 한다
            </summary>
            <param name="li"></param>
            <param name="ch"></param>
            <param name="strText"></param>
        </member>
        <member name="M:Function.form.control.Invoke_ListView_ColumnHeader_Width(System.Windows.Forms.ListView,System.Windows.Forms.ColumnHeader,System.Int32)">
            <summary>
            listvivew에 컬럼해드 너비 변경 한다
            </summary>
            <param name="li"></param>
            <param name="ch"></param>
            <param name="strText"></param>
        </member>
        <member name="M:Function.form.control.ListViewItem_Get_SubItem(System.Windows.Forms.ListViewItem,System.Int32)">
            <summary>
            리스트뷰아이템에 서브아이템 text 리턴 한다
            </summary>
            <param name="li"></param>
            <param name="intSubItemIndex"></param>
        </member>
        <member name="M:Function.form.control.ListView_ItemHeight_Set(System.Windows.Forms.ListView,System.Int32)">
            <summary>
            리스트뷰의 항목 높이을 조절한다.
            </summary>
            <param name="lst"></param>
            <param name="height"></param>
        </member>
        <member name="M:Function.form.control.Invoke_ComboBox_DataSource(System.Windows.Forms.ComboBox,System.Data.DataView,System.String)">
            <summary>
            콤보박스에 Data Binding한다
            </summary>
            <param name="cmb"></param>
            <param name="dt"></param>
            <param name="strDisplayMember"></param>
        </member>
        <member name="M:Function.form.control.Invoke_ComboBox_AddItem(System.Windows.Forms.ComboBox,System.String[])">
            <summary>
            콤보박스에 데이터를 추가하여 준다.
            </summary>
            <param name="cmb"></param>
            <param name="strItems"></param>
        </member>
        <member name="M:Function.form.control.Invoke_ComboBox_AddItem(System.Windows.Forms.ComboBox,System.Enum)">
            <summary>
            Enum item을 콤보 박스에 넣는다.
            </summary>
            <param name="cmb"></param>
            <param name="e"></param>
        </member>
        <member name="M:Function.form.control.Invoke_ComboBox_SelectedIndex(System.Windows.Forms.ComboBox,System.Int32)">
            <summary>
            콤보박스에 SelectedIndex 값을 설정한다.
            </summary>
            <param name="cmb"></param>
            <param name="intIndex"></param>
        </member>
        <member name="M:Function.form.control.Invoke_ComboBox_SelectedItem(System.Windows.Forms.ComboBox,System.String,System.String)">
            <summary>
            바인딩된 콤보박스에 특정 필드에 값으로 아이템 선택
            </summary>
            <param name="cmb"></param>
            <param name="strField">필드명</param>
            <param name="strSelectText">찾는 값</param>
        </member>
        <member name="M:Function.form.control.Invoke_ComboBox_GetSelectValue(System.Windows.Forms.ComboBox,System.String)">
            <summary>
            콤보 박스에 선택된 값을 가져온다.(Invoke 아님)
            </summary>
            <param name="cmb"></param>
            <param name="strField"></param>
        </member>
        <member name="M:Function.form.control.Invoke_ComboBox_ClearItem(System.Windows.Forms.ComboBox)">
            <summary>
            콤보박스에 item를 전부 삭제한다.
            </summary>
            <param name="cmb"></param>
        </member>
        <member name="M:Function.form.control.Invoke_StatusStrip_LabelText(System.Windows.Forms.StatusStrip,System.Windows.Forms.ToolStripLabel,System.String,System.Drawing.Image)">
            <summary>
            statusstrip에 라벨 변경 한다
            </summary>
            <param name="st"></param>
            <param name="tl"></param>
            <param name="str"></param>
            <param name="img"></param>
        </member>
        <member name="M:Function.form.control.Invoke_ToolStrip_LabelText(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStripLabel,System.String,System.Drawing.Image)">
            <summary>
            statusstrip에 라벨 변경 한다
            </summary>
            <param name="st"></param>
            <param name="tl"></param>
            <param name="str"></param>
            <param name="img"></param>
        </member>
        <member name="M:Function.form.control.Invoke_NumericUpDown_Value(System.Windows.Forms.NumericUpDown,System.Int32)">
            <summary>
            NumericUpDown의 값 변경
            </summary>
            <param name="nm"></param>
            <param name="intValue"></param>
        </member>
        <member name="M:Function.form.control.Invoke_CheckBox_Checked(System.Windows.Forms.CheckBox,System.Boolean)">
            <summary>
            체크 박스에 값을 변경한다.
            </summary>
            <param name="cb"></param>
            <param name="value"></param>
        </member>
        <member name="M:Function.form.control.Invoke_ContextMenuStrip_ItemAdd(System.Windows.Forms.ContextMenuStrip,System.String,System.String,System.Drawing.Image,System.EventHandler[],System.Windows.Forms.Keys)">
            <summary>
            ContextMenuStrip에 아이템(목록)을 추가한다.
            </summary>
            <param name="cms"></param>
            <param name="strName"></param>
            <param name="strText"></param>
            <param name="img"></param>
            <param name="e"></param>
        </member>
        <member name="M:Function.form.control.Invoke_ProgressBar_Value(System.Windows.Forms.ProgressBar,System.Int32,System.Int32)">
            <summary>
            ProgressBar의 max값과 현재값을 변경한다.
            </summary>
            <param name="bar"></param>
            <param name="intMaximum"></param>
            <param name="intValue"></param>
        </member>
        <member name="M:Function.form.control.Font_Control_Resize_Get(System.Windows.Forms.Control,Function.form.control.enControl_Criteria,System.String,System.Single)">
            <summary>
            컨트롤 사이즈로 원하는 폰트 크기를 넘겨 준다.
            </summary>
            <param name="ctrl"></param>
            <param name="ccr">기존 사이즈 너비, 높이</param>
            <param name="criteria_string">기준으로 할 문자.</param>
            <param name="ratio">원하는 비율 0.01~1</param>
            <returns></returns>
        </member>
        <member name="M:Function.form.control.Font_Control_String_Size_Get(System.Windows.Forms.Control,Function.form.control.enControl_Criteria,System.String)">
            <summary>
            컨트롤에서 사용할 문자의 길이를 구한다.
            </summary>
            <param name="ctrl"></param>
            <param name="ccr"></param>
            <param name="criteria_string"></param>
            <returns></returns>
        </member>
        <member name="M:Function.form.control.InputForm_Init(System.Windows.Forms.Control,System.Windows.Forms.Control[])">
            <summary>
            폼에 입력 항목을 초기화 한다.
            </summary>
            <param name="ctrl"></param>
            <param name="parents">null이 아니면, 이 컨틀롤(컨데이너) 자식 컨트롤만 초기화 한다.</param>
        </member>
        <member name="M:Function.form.control.inputControl_Clear(System.Windows.Forms.Control,System.Boolean@,System.Windows.Forms.Control[])">
            <summary>
            항목값을 초기화 한다.
            </summary>
            <param name="ctrl">초기화 여부</param>
            <returns></returns>
        </member>
        <member name="M:Function.form.control.isInputContol(System.Windows.Forms.Control)">
            <summary>
            입력 컨트롤 여부를 확인한다.
            </summary>
            <param name="ctrl"></param>
            <returns></returns>
        </member>
        <member name="M:Function.form.control.SetTabStopsLength(System.Windows.Forms.Control,System.Int32)">
            <summary>
            컨트롤에 탭문자 길이를 설정 한다.
            </summary>
            <param name="ctrl"></param>
            <param name="length"></param>
        </member>
        <member name="T:Function.form.Sizable_Control_Set">
            <summary>
            폼내에 콘트롤을 사이즈 조절 할 수 있도록 하여 준다..
            </summary>
        </member>
        <member name="M:Function.form.Sizable_Control_Set.#ctor(System.Windows.Forms.Form)">
            <summary>
            인스턴스 생성 하면서 
            </summary>
            <param name="f"></param>
        </member>
        <member name="M:Function.form.Sizable_Control_Set.Control_Add(System.Windows.Forms.Control)">
            <summary>
            사이즈 조정할 컨트롤을 추가 한다.
            </summary>
            <param name="c"></param>
        </member>
        <member name="T:Function.form.controlEvent">
            <summary>
            폼 이벤트 관련 제어 클래스
            </summary>
        </member>
        <member name="M:Function.form.controlEvent.TextBox_Press_NumberOnly(System.Windows.Forms.TextBox)">
            <summary>
            텍스트 박스 입력시 넘버만 입력 할 수 있도록 한다.
            </summary>
        </member>
        <member name="M:Function.form.controlEvent.TextBox_Press_NumberOnly_Remove(System.Windows.Forms.TextBox)">
            <summary>
            텍스트 박스 입력시 넘버만 입력 할 수 있는 이벤트를 제거 한다.
            </summary>
            <param name="tb"></param>
        </member>
        <member name="M:Function.form.controlEvent.Control_Set_inTextBox_Enter2NextControl(System.Windows.Forms.Control)">
            <summary>
            컨트롤 안에 텍스트 박스에 엔터이벤트 추가한다
            </summary>
            <param name="ctl"></param>
        </member>
        <member name="M:Function.form.controlEvent.TextBox_Enter2NextControl(System.Windows.Forms.TextBox)">
            <summary>
            텍스트 박스에서 엔터누르면 다음 컨트롤로 이동 시킨다
            </summary>
            <param name="tb"></param>
        </member>
        <member name="M:Function.form.controlEvent.Control_SetAlignment(System.Windows.Forms.Control,System.Drawing.ContentAlignment)">
            <summary>
            컨트롤 위치를 정렬한다. - 부모 컨트롤 사이즈가 변경시 마다 정렬을 하여 준다
            </summary>
            <param name="ctrl"></param>
            <param name="ali"></param>
        </member>
        <member name="P:Function.form.Db.DBSetting.DbType_Changable">
            <summary>
            DB타입 변경 가능여부, 폼 로드전에만 변경 가능
            </summary>
        </member>
        <member name="M:Function.form.Db.DBSetting.inpDbType_Text_Changed(System.Object,Function.form.usrEventArgs)">
            <summary>
            db 타입 변경
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Function.form.Db.DBSetting.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Function.form.Db.DBSetting.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Function.form.Db.DBSetting.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Function.form.enConfigFileType">
            <summary>
            컨피그 파일 타입
            </summary>
        </member>
        <member name="F:Function.form.enConfigFileType.DefaultConfig">
            <summary>
            프레임 워크에서 제공하는 설정 파일 사용
            </summary>
        </member>
        <member name="F:Function.form.enConfigFileType.ConfigXml">
            <summary>
            DataSet xml 설정 파일 사용
            </summary>
        </member>
        <member name="F:Function.form.enMsgType.None">
            <summary>
            타입 없음, 하얀 동그라미
            </summary>
        </member>
        <member name="F:Function.form.enMsgType.OK">
            <summary>
            타입 정상, 녹색 동그라미
            </summary>
        </member>
        <member name="F:Function.form.enMsgType.Error">
            <summary>
            타입 에러, 빨강 동그라미
            </summary>
        </member>
        <member name="T:Function.form.clsbaseForm">
            <summary>
            BaseForm이나 subBaseForm에서 모두 사용되는 이벤트나 프로퍼티, 메서드 등록
            </summary>
        </member>
        <member name="F:Function.form.clsbaseForm.tmrInit">
            <summary>
            초기화 사용 시 사용 타이머
            </summary>
        </member>
        <member name="P:Function.form.clsbaseForm.isUseFormInit">
            <summary>
            폼 로드 시 타이머로 Form_Init 사용 여부를 가져오거나 설정한다. Form_Init를 override하여 사용할것
            </summary>
        </member>
        <member name="P:Function.form.clsbaseForm.SaveConfigFileType">
            <summary>
            프로그램에서 저장에 사용할 컨피그 저장할 타입
            </summary>
        </member>
        <member name="P:Function.form.clsbaseForm.SavePosition_Setting">
            <summary>
            셑팅설정  클라스
            </summary>
        </member>
        <member name="P:Function.form.clsbaseForm.isSaveControlSize">
            <summary>
            컨트롤 크기저장여부를 가져오거나 설정한다.<para />
            폼상태 저장을 위해서는 SavePosition_Setting 변수에 사용할 프로퍼티 클래스를 할당하고(ex)SavePosition_Setting = Properties.Settings.Default <para />
            	프로퍼티 클래스에 FormControlSize항목 추가한다(형식은 string) - 저장은 subBaseForm 이름을 기준으로 각컨트롤의 이름으로 사이즈 저장 처리를 한다.<para />
            </summary>
        </member>
        <member name="M:Function.form.clsbaseForm.Form_Init">
            <summary>
            폼 초기화 작업을 한다. - 폼로드후 처리 하므로 화면에서 내용을 볼수 있다.
            </summary>
        </member>
        <member name="P:Function.form.clsbaseForm.SavePosition">
            <summary>
            폼 위치 저장 여부
            각 프로그램에서 Setting.setting 파일을 만든다<para/>
            아래와 같은 항목을 추가 한다 <para/>
            프로퍼티 클래스에 BF_FORMPOSITION항목 추가한다(형식은 STRING) 
            </summary>
        </member>
        <member name="M:Function.form.clsbaseForm.formPostion_Save">
            <summary>
            폼 위치 정보를 저장한다.
            </summary>
        </member>
        <member name="P:Function.form.clsbaseForm.PropertySaveContolsName">
            <summary>
            프로퍼티를 저장할 컨트롤 이름(대소문자 구분, ';'로 컨트롤별 구분)<para/>
            지원 컨트롤:XtraControl.GridControl, XtraEditors.SplitterControl, CheckBox, Panel(크기), <para/>
            ListView(컬럼들 너비), (그외 컨트롤)Text만 저장<para/>
            폼상태 저장을 위해서는 SavePosition_Setting 변수에 사용할 프로퍼티 클래스를 할당하고(ex)SavePosition_Setting = Properties.Settings.Default <para/>
            	프로퍼티 클래스에 devProperties으 값을 이름으로 항목 추가한다(형식은 string)
            </summary>
        </member>
        <member name="M:Function.form.clsbaseForm.property_Save">
            <summary>
            컨트롤의 프로퍼티 정보를 저장한다.
            </summary>
        </member>
        <member name="M:Function.form.fncForm.getSettingString(System.String,System.String)">
            <summary>
            셑팅 문자열을 가지고 온다. 
            포맷) /*폼이름:셑팅문자열*/
            </summary>
            <param name="value"></param>
            <param name="formName"></param>
            <returns></returns>
        </member>
        <member name="M:Function.form.fncForm.revSettingString(System.String,System.String)">
            <summary>
            설정값에서 해당 폼의 설정값을 제거하고 가져온다.
            </summary>
            <param name="value"></param>
            <param name="formName"></param>
            <returns></returns>
        </member>
        <member name="M:Function.form.fncForm.control_Size_Load(System.Object,System.String,System.Windows.Forms.Form)">
            <summary>
            컨트롤 크기 및 위치 정볼를 불러온다.
            </summary>
            <param name="setting_object"></param>
            <param name="propertyName"></param>
        </member>
        <member name="M:Function.form.fncForm.FindControlInControl(System.Windows.Forms.Control,System.String)">
            <summary>
            컨트롤 이름으로 컨트롤을 찾는다.
            </summary>
            <param name="ctrl"></param>
            <param name="ctrlName"></param>
            <returns></returns>
        </member>
        <member name="T:Function.form.frmBaseForm">
            <summary>
            기본 폼 스타일 
            폼상태 저장을 위해서는 SavePosition_Setting 변수에 사용할 프로퍼티 클래스를 할당하고<para/>
            (ex)SavePosition_Setting = Properties.Settings.Default / [변수]SavePosition = true 할당<para/>
            	프로퍼티 클래스에 BF_FORMPOSITION항목 추가한다(형식은 string) 
            </summary>
        </member>
        <member name="P:Function.form.frmBaseForm.ShowStatusBar">
            <summary>
            상태창 표시 여부를 가져온다.
            </summary>
        </member>
        <member name="P:Function.form.frmBaseForm.LastMessage">
            <summary>
            마지막 메세지 내용
            </summary>		
        </member>
        <member name="P:Function.form.frmBaseForm.LastMessageError">
            <summary>
            마지막 메세지 에러 여부
            </summary>
        </member>
        <member name="F:Function.form.frmBaseForm.tmrDtNow">
            <summary>
            Form에 현재시간 부분 업데이트
            </summary>
        </member>
        <member name="F:Function.form.frmBaseForm.dtFormStart">
            <summary>
            폼 시작 시간.
            </summary>
        </member>
        <member name="F:Function.form.frmBaseForm.pgmName">
            <summary>
            프로그램 이름
            </summary>
        </member>
        <member name="P:Function.form.frmBaseForm.PgmName">
            <summary>
            프로그램 이름을 설정 하거나 가저 옵니다.
            </summary>
        </member>
        <member name="T:Function.form.frmBaseForm.delSetMessage">
            <summary>
            메세지 표시 델리게이트 : 타 폼이나 프로그램에서 폼에 메세지 표시시 이용.
            </summary>
            <param name="msgType"></param>
            <param name="strMessage"></param>
            <param name="isLog"></param>		
        </member>
        <member name="T:Function.form.frmBaseForm.delProcException">
            <summary>
            에러 처리 델리게이트 : 타 폼이나 프로그램에서 모에 에러 처리 이용시..
            </summary>
            <param name="ex"></param>
            <param name="strMethodName"></param>
        </member>
        <member name="F:Function.form.frmBaseForm.clsLog">
            <summary>
            로그 클래스 -> 사용 폼에서 객체 생성을 해주어야 한다.
            </summary>
        </member>
        <member name="F:Function.form.frmBaseForm._isFormClose">
            <summary>
            폼 닫임 여부 처리.
            </summary>
        </member>
        <member name="F:Function.form.frmBaseForm.NotifyContextMenu">
            <summary>
            노티파이아이퀀 컨택스트 메뉴
            </summary>
        </member>
        <member name="E:Function.form.frmBaseForm.OnMessageChanged">
            <summary>
            메시지 변경시 발생하는 이벤트
            </summary>
        </member>
        <member name="F:Function.form.frmBaseForm._closeToMinimize">
            <summary>
            창을 닫으면 창을 최소화 여부를 가져오거나 설정 합니다.
            </summary>
        </member>
        <!-- "P:Function.form.frmBaseForm.CloseToMinimize" 멤버에 대해 잘못된 형식의 XML 주석은 무시됩니다. -->
        <member name="F:Function.form.frmBaseForm._hideIconWhenMinimized">
            <summary>
            최소화 할 때 테스크바의 아이콘 숨김여부를 가져오거나 설정 합니다.
            </summary>
        </member>
        <member name="P:Function.form.frmBaseForm.HideIconWhenMinimized">
            <summary>
            최소화 할 때 테스크바의 아이콘 숨김여부를 가져오거나 설정 합니다.		
            </summary>
        </member>
        <member name="M:Function.form.frmBaseForm.M_Click(System.Object,System.EventArgs)">
            <summary>
            컨텍스트 메뉴에서 종료 클릭
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Function.form.frmBaseForm.ProcException(System.Exception,System.String,System.Boolean)">
            <summary>
            에러 처리를 한다. 로그기록 및 상태표시 창...
            </summary>
            <param name="ex"></param>
            <param name="strMethodName"></param>
            <param name="showMessageBox">메세지 PopUp 표시 여부</param>
        </member>
        <member name="M:Function.form.frmBaseForm.SetMessage_Clear">
            <summary>
            메시지 창을 클리어 한다.
            </summary>
        </member>
        <member name="M:Function.form.frmBaseForm.SetMessage(System.Boolean,System.String,System.Boolean)">
            <summary>
            메시지 창에 내용을 보여 준다.
            </summary>
            <param name="isError">에러 여부</param>
            <param name="strMessage"></param>
            <param name="isLog"></param>
        </member>
        <member name="M:Function.form.frmBaseForm.SetMessageIcon(Function.form.enMsgType)">
            <summary>
            메시지 창에 아이콘을 표시 합니다.
            </summary>
            <param name="msgType"></param>
        </member>
        <member name="M:Function.form.frmBaseForm.SetMessage(Function.form.enMsgType,System.String,System.Boolean)">
            <summary>
            메시지 창에 내용을 보여 준다.(메시지 타입 사용)
            </summary>
            <param name="msgType"></param>
            <param name="strMessage"></param>
            <param name="isLog"></param>
        </member>
        <member name="M:Function.form.frmBaseForm.SetMessage_TextOnly(Function.form.enMsgType,System.String,System.Boolean)">
            <summary>
            메시지 창에 내용을 보여준다. - 앞에 시간없음
            </summary>
            <param name="msgType"></param>
            <param name="strMessage"></param>
            <param name="isLog"></param>
        </member>
        <member name="M:Function.form.frmBaseForm.SetLastMessage(Function.form.enMsgType,System.String,System.Boolean)">
            <summary>
            메시지 창에 내용을 보여 준다.
            </summary>
            <param name="msgType">에러 여부</param>
            <param name="strMessage"></param>
            <param name="isLog"></param>
        </member>
        <member name="M:Function.form.frmBaseForm.Timer_1sec(System.Object)">
            <summary>
            1초마다 실행 되는 폼 타이버 override하여 사용
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Function.form.frmBaseForm.ProgressBar_Value(System.Int32)">
            <summary>
            상태바에 값을 변경한다.
            </summary>
            <param name="NowValue"></param>
        </member>
        <member name="M:Function.form.frmBaseForm.ProgressBar_MaxValue(System.Int32)">
            <summary>
            최대값을 설정한다.
            </summary>
            <param name="MaxValue"></param>
        </member>
        <member name="M:Function.form.frmBaseForm.ProgressBar_MinValue(System.Int32)">
            <summary>
            최소값을 설정한다.
            </summary>
            <param name="MinValue"></param>
        </member>
        <member name="M:Function.form.frmBaseForm.LogWrite(System.String)">
            <summary>
            로그를 기록한다.
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Function.form.frmBaseForm.Scr_chk(Function.form.frmBaseForm.enScr_chk_type)">
            <summary>
            스크린 위치를 확인한다.
            </summary>
            <param name="chkType"></param>
            <returns></returns>
        </member>
        <member name="M:Function.form.frmBaseForm.ScrIdxGet(System.Drawing.Rectangle[],System.Drawing.Point,System.Drawing.Size)">
            <summary>
            현재 폼의 스크린 위치를 구한다
            </summary>
            <param name="scr"></param>
            <param name="loc"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="P:Function.form.frmBaseForm.Notifyicon_Visible">
            <summary>
            NotifyIcon 표시 여부를 가져오거나 설정합니다. 직접 클래스늩 base.Notifyicon 로 접근 가능
            </summary>
        </member>
        <member name="P:Function.form.frmBaseForm.Notifyicon_Icon">
            <summary>
            NotifyIcon 현재 아이콘을 가져 오거나 설정합니다.. 직접 클래스늩 base.Notifyicon 로 접근 가능
            </summary>
        </member>
        <member name="F:Function.form.frmBaseForm.components">
            <summary>
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:Function.form.frmBaseForm.Dispose(System.Boolean)">
            <summary>
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:Function.form.frmBaseForm.InitializeComponent">
            <summary>
            디자이너 지원에 필요한 메서드입니다.
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="F:Function.form.frmOptionSelect._defaltKey">
            <summary>
            로드시 기본 선택 항목
            </summary>
        </member>
        <member name="F:Function.form.frmOptionSelect._isFormLoad">
            <summary>
            폴 로드 여부
            </summary>
        </member>
        <member name="F:Function.form.frmOptionSelect._msg">
            <summary>
            메시지
            </summary>
        </member>
        <member name="P:Function.form.frmOptionSelect.SelectType">
            <summary>
            항목 선택 타입을 가져오거나 설정 합니다.
            </summary>
        </member>
        <member name="P:Function.form.frmOptionSelect.Title">
            <summary>
            타이틀을 가져오거나 설정 합니다.
            </summary>
        </member>
        <member name="M:Function.form.frmOptionSelect.Items_Add(System.Object,System.String)">
            <summary>
            선택 아이템을 추가 합니다.
            </summary>
            <param name="key"></param>
            <param name="Text"></param>
        </member>
        <member name="M:Function.form.frmOptionSelect.#ctor(System.String,System.String,System.Object[])">
            <summary>
            옵션 선택 폼을 생성합니다.
            </summary>
            <param name="title"></param>
            <param name="msg"></param>
            <param name="defealtKey"></param>
        </member>
        <member name="F:Function.form.frmOptionSelect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Function.form.frmOptionSelect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Function.form.frmOptionSelect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Function.form.frmWating.#ctor">
            <summary>
            대기 창
            </summary>
        </member>
        <member name="M:Function.form.frmWating.#ctor(System.String)">
            <summary>
            대기 창을 초기화 화면서 메시지를 설정한다.
            </summary>
            <param name="_msg"></param>
        </member>
        <member name="P:Function.form.frmWating.Msg">
            <summary>
            창에 표시되는 메지지를 가지고 오거나 설정합니다.
            </summary>
        </member>
        <member name="F:Function.form.frmWating.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Function.form.frmWating.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Function.form.frmWating.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Function.form.frmMessage.ApplyAll">
            <summary>
            모든 항목 적용여부
            </summary>
        </member>
        <member name="M:Function.form.frmMessage.SecCount(System.Object)">
            <summary>
            자동 닫힘 쓰레드...
            </summary>
            <param name="obj"></param>
        </member>
        <member name="F:Function.form.frmMessage.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Function.form.frmMessage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Function.form.frmMessage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Function.form.frmNumberInput">
            <summary>
            숫자 입력창 클래스
            </summary>
        </member>
        <member name="P:Function.form.frmNumberInput.intMaxLength">
            <summary>
            입력 받을 숫자 길이 설정 (1~10)
            </summary>
        </member>
        <member name="M:Function.form.frmNumberInput.NumberClick(System.Object,System.EventArgs)">
            <summary>
            번호판 클릭..
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Function.form.frmNumberInput.components">
            <summary>
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:Function.form.frmNumberInput.Dispose(System.Boolean)">
            <summary>
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:Function.form.frmNumberInput.InitializeComponent">
            <summary>
            디자이너 지원에 필요한 메서드입니다.
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="F:Function.form.frmConsoleLog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Function.form.frmConsoleLog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Function.form.frmConsoleLog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Function.form.frmInputBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Function.form.frmInputBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Function.form.frmInputBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Function.form.enSubFormLocation">
            <summary>
            서브폼 로드시 시작 위치 enum
            </summary>
        </member>
        <member name="M:Function.form.formFunction.PanelMouseScroll_Set(System.Windows.Forms.Form,System.Windows.Forms.Panel)">
            <summary>
            Panel의 마우스 스크롤 이벤트를 추가 한다.
            </summary>
            <param name="frmParent"></param>
            <param name="pnl"></param>
        </member>
        <member name="M:Function.form.formFunction.NumberInput_Show(System.Windows.Forms.Form,System.Int32)">
            <summary>
            숫자 입력판을 보여 준다.
            </summary>
            <param name="frmParent"></param>
            <param name="intMaxLength">입력 받을 숫자 길이 1~10</param>
            <returns>입력 받은 값</returns>
        </member>
        <member name="M:Function.form.formFunction.SubForm_SetLocation(System.Windows.Forms.Form,System.Windows.Forms.Form,Function.form.enSubFormLocation)">
            <summary>
            서브폼 로드시 시작 위치 조정하여 준다
            </summary>
            <param name="frmMain"></param>
            <param name="frmSub"></param>
        </member>
        <member name="M:Function.form.formFunction.ControlAlign(System.Windows.Forms.Control,System.Drawing.ContentAlignment)">
            <summary>
            컨트롤을 부모컨트롤에 정렬을 한다.
            </summary>
            <param name="ctrl"></param>
            <param name="ali"></param>
        </member>
        <member name="M:Function.form.formFunction.InputBoxShow(System.Windows.Forms.Form,System.Boolean,System.Boolean,System.Object)">
            <summary>
            사용자 입력 창을 띄운다
            </summary>
            <param name="mainform">표시될 부모창</param>
            <param name="isNumberOnly">숫자만 입력</param>
            <param name="isMultiLine">다중로우 여부</param>
            <param name="default_value">기본값</param>
            <returns>취소 돼면 null로 리턴</returns>
        </member>
        <member name="F:Function.form.frmPasswords.PassWords">
            <summary>
            입력한 패스 워드
            </summary>
        </member>
        <member name="M:Function.form.frmPasswords.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="title">창에 표시될 타이틀</param>
            <param name="passwords">확인할 암호, empty로 입력 시 비교는 하지 않고 입력만 받는다</param>
        </member>
        <member name="F:Function.form.frmPasswords.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Function.form.frmPasswords.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Function.form.frmPasswords.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Function.form.frmProgress.Title">
            <summary>
            타이틀 텍스트를 설정하거나 가져 옵니다.
            </summary>
        </member>
        <member name="P:Function.form.frmProgress.Detail">
            <summary>
            세부항목 텍스트를 가져오거나 설정합니다.
            </summary>
        </member>
        <member name="P:Function.form.frmProgress.EachMaxValue">
            <summary>
            개별항목 진행상태 최대 값을 설정하거나 가져 옵니다.
            </summary>
        </member>
        <member name="P:Function.form.frmProgress.EachValue">
            <summary>
            개별항목 진행상태 현재 값을 설정하거나 가져 옵니다.
            </summary>
        </member>
        <member name="P:Function.form.frmProgress.AllMaxValue">
            <summary>
            개별항목 진행상태 최대 값을 설정하거나 가져 옵니다.
            </summary>
        </member>
        <member name="P:Function.form.frmProgress.AllValue">
            <summary>
            개별항목 진행상태 현재 값을 설정하거나 가져 옵니다.
            </summary>
        </member>
        <member name="P:Function.form.frmProgress.isCancel">
            <summary>
            취소 여부를 가져 옵니다.
            </summary>
        </member>
        <member name="F:Function.form.frmProgress.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Function.form.frmProgress.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Function.form.frmProgress.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Function.form.frmWorkBase.Title_Label">
            <summary>
            폼 Title을 가져오거나 설정한다.
            </summary>
        </member>
        <member name="F:Function.form.frmWorkBase.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Function.form.frmWorkBase.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Function.form.frmWorkBase.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Function.form.popNotice.#ctor(System.String,System.Int32,System.Drawing.ContentAlignment,System.Int32)">
            <summary>
             
            </summary>
            <param name="msg">보여줄 메시지</param>
            <param name="monitor">모니터 번호</param>
            <param name="align">메시지 창 위치</param>
            <param name="AutoClose">자동 닫기(초) 0이면 사용자가 닫는다.</param>
        </member>
        <member name="F:Function.form.popNotice.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Function.form.popNotice.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Function.form.popNotice.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <!-- "T:Function.form.ScrollPanelMessageFilter" 멤버에 대해 잘못된 형식의 XML 주석은 무시됩니다. -->
        <member name="T:Function.form.subBaseForm">
            <summary>
            서브폼, pop up 화면이나 툴박스, 설정 화면에 사용 하면 좋다.
            </summary>
        </member>
        <member name="E:Function.form.subBaseForm.OnSetMessage">
            <summary>
            메시지 처리 event
            </summary>
        </member>
        <member name="E:Function.form.subBaseForm.OnProcException">
            <summary>
            에러 처리 event
            </summary>
        </member>
        <member name="E:Function.form.subBaseForm.OnSetLastMessage">
            <summary>
            메시지 처리 event
            </summary>
        </member>
        <member name="M:Function.form.subBaseForm.SetMessage(System.Boolean,System.String,System.Boolean)">
            <summary>
            메시지 처리 한다.
            </summary>
            <param name="isError"></param>
            <param name="strMessage"></param>
            <param name="isLog"></param>
        </member>
        <member name="M:Function.form.subBaseForm.ProcException(System.Exception,System.String,System.Boolean)">
            <summary>
            에러 처리를 한다.
            </summary>
            <param name="ex"></param>
            <param name="strModuleName"></param>
        </member>
        <member name="F:Function.form.subBaseForm.components">
            <summary>
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:Function.form.subBaseForm.Dispose(System.Boolean)">
            <summary>
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:Function.form.subBaseForm.InitializeComponent">
            <summary>
            디자이너 지원에 필요한 메서드입니다.
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="T:Function.form.Properties.Resources">
            <summary>
              지역화된 문자열 등을 찾기 위한 강력한 형식의 리소스 클래스입니다.
            </summary>
        </member>
        <member name="P:Function.form.Properties.Resources.ResourceManager">
            <summary>
              이 클래스에서 사용하는 캐시된 ResourceManager 인스턴스를 반환합니다.
            </summary>
        </member>
        <member name="P:Function.form.Properties.Resources.Culture">
            <summary>
              이 강력한 형식의 리소스 클래스를 사용하여 모든 리소스 조회에 대한 현재 스레드의 CurrentUICulture
              속성을 재정의합니다.
            </summary>
        </member>
        <member name="P:Function.form.Properties.Resources.BTN_NONE">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:Function.form.Properties.Resources.BTN_OFF">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="P:Function.form.Properties.Resources.BTN_ON">
            <summary>
              System.Drawing.Bitmap 형식의 지역화된 리소스를 찾습니다.
            </summary>
        </member>
        <member name="T:Function.form.usrUserControlItemBase">
            <summary>
            사용자 정의 클래서 아이템(항목) 베이스 클래스
            </summary>
        </member>
        <member name="M:Function.form.usrUserControlItemBase.chkFocused(System.Windows.Forms.Control)">
            <summary>
            포커스를 일었을경우 선택상태 체크 - 미사용
            </summary>
            <param name="ctrl"></param>
            <returns></returns>
        </member>
        <member name="E:Function.form.usrUserControlItemBase.ValueChanged">
            <summary>
            Text값이 변경돼면 이벤트가 발생한다.
            </summary>
        </member>
        <member name="E:Function.form.usrUserControlItemBase.SelectedChanged">
            <summary>
            컨트롤의 선택 되었을때 이벤트가 발생한다.
            </summary>
        </member>
        <member name="P:Function.form.usrUserControlItemBase.IsSelected">
            <summary>
            항목선택
            </summary>
        </member>
        <member name="M:Function.form.usrUserControlItemBase.Click(System.Object,System.EventArgs)">
            <summary>
            라벨 클릭 -> 항목 선택 처리
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Function.form.usrUserControlItemBase.Leave(System.Object,System.EventArgs)">
            <summary>
            포커스를 잃었을 경우 처리
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:Function.form.usrUserControlItemBase.LostFocus">
            <summary>
            포커스를 잃었을경우 이벤트 발생
            </summary>
        </member>
        <member name="P:Function.form.usrUserControlItemBase.ColorNoSelected">
            <summary>
            항목이 미선택되었을경우 컬러
            </summary>
        </member>
        <member name="P:Function.form.usrUserControlItemBase.ColorSelected">
            <summary>
            항목이 선택되었을경우 컬러
            </summary>
        </member>
        <member name="P:Function.form.usrUserControlListBase.Selected_Index">
            <summary>
            선택된 항목 인덱스
            </summary>
        </member>
        <member name="P:Function.form.usrUserControlListBase.Selected_item_value">
            <summary>
            선택한 항목의 값
            </summary>
        </member>
        <member name="P:Function.form.usrUserControlListBase.ItemHeight">
            <summary>
            각 항목의 높이를 가져오거나 설정합니다.
            </summary>
        </member>
        <member name="M:Function.form.usrUserControlListBase.item_SelectedChanged(System.Object,System.EventArgs)">
            <summary>
            항목에서 선택 항목이 변경 되었을 경우
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Function.form.usrUserControlListBase.DataSource">
            <summary>
            데이터 소스
            </summary>
        </member>
        <member name="E:Function.form.usrUserControlListBase.DataSourceChanged">
            <summary>
            DataSource나 textValue가 변경돼면 발생 하는 이벤트
            </summary>
        </member>
        <member name="P:Function.form.usrUserControlListBase.ColorNoSelected">
            <summary>
            항목이 미선택되었을경우 컬러
            </summary>
        </member>
        <member name="P:Function.form.usrUserControlListBase.ColorSelected">
            <summary>
            항목이 선택되었을경우 컬러
            </summary>
        </member>
        <member name="T:Function.form.Del_AdvValue_Changing">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="current_value"></param>
            <param name="new_value"></param>
            <returns>취소여부</returns>
        </member>
        <member name="E:Function.form.btnAdvToggleButton.On_Value_Changed">
            <summary>
            버튼 값이 변경 후 발생하는 이벤트
            </summary>
        </member>
        <member name="E:Function.form.btnAdvToggleButton.On_Value_Changing">
            <summary>
            버튼 값이 변경 전 발생하는 이벤트
            이벤트 취소 시 :false 리턴
            </summary>
        </member>
        <member name="F:Function.form.btnAdvToggleButton._items">
            <summary>
            item 집합
            </summary>
        </member>
        <member name="F:Function.form.btnAdvToggleButton._index">
            <summary>
            현재 선택된 아이템 인덱스
            </summary>
        </member>
        <member name="P:Function.form.btnAdvToggleButton.Click_Enabled">
            <summary>
            클릭시 토글 처리 여부
            </summary>
        </member>
        <member name="P:Function.form.btnAdvToggleButton.Item">
            <summary>
            현재 아이템을 가져오거나 설정합니다.
            </summary>
        </member>
        <member name="P:Function.form.btnAdvToggleButton.ButtonType">
            <summary>
            버튼 타입을 변경하거나 가져 온다.
            </summary>
        </member>
        <member name="P:Function.form.btnAdvToggleButton.CurrentText">
            <summary>
            현재 값의 Text를 가져 온다
            </summary>
        </member>
        <member name="P:Function.form.btnAdvToggleButton.Value">
            <summary>
            버튼의 현재 값을 가져오거나 설정합니다.
            </summary>
        </member>
        <member name="M:Function.form.btnAdvToggleButton.Invoke_Value(System.Object)">
            <summary>
            Control에 TEXT를 변경한다.
            </summary>
            <param name="lbl"></param>
            <param name="strText"></param>
        </member>
        <member name="M:Function.form.btnAdvToggleButton.next_index_Get">
            <summary>
            다음 항목을 가져옵니다.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Function.form.btnAdvToggleButton.next_item_Get">
            <summary>
            다음 항목을 가져옵니다.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Function.form.btnAdvToggleButton.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:Function.form.btnAdvToggleButton.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:Function.form.btnAdvToggleButton.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="E:Function.form.btnToggleButton.On_Value_Changed">
            <summary>
            버튼 값이 변경 후 발생하는 이벤트
            </summary>
        </member>
        <member name="E:Function.form.btnToggleButton.On_Value_Changing">
            <summary>
            버튼 값이 변경 전 발생하는 이벤트
            이벤트 취소 시 :false 리턴
            </summary>
        </member>
        <member name="P:Function.form.btnToggleButton.ButtonType">
            <summary>
            버튼 타입을 변경하거나 가져 온다.
            </summary>
        </member>
        <member name="P:Function.form.btnToggleButton.On_Text">
            <summary>
            버튼 타입이 Text일때 value가 true일 경우 표시 되는 Text
            </summary>
        </member>
        <member name="P:Function.form.btnToggleButton.Off_Text">
            <summary>
            버튼 타입이 Text일때 value가 false일 경우 표시 되는 Text
            </summary>
        </member>
        <member name="P:Function.form.btnToggleButton.CurrentText">
            <summary>
            현재 표시 되는 텍스트를 가져 옵니다.
            </summary>
        </member>
        <member name="P:Function.form.btnToggleButton.Value">
            <summary>
            버튼의 현재 값
            </summary>
        </member>
        <member name="P:Function.form.btnToggleButton.On_Image">
            <summary>
            Value가 true일 경우 이미지
            </summary>
        </member>
        <member name="P:Function.form.btnToggleButton.Off_Image">
            <summary>
            Value가 true일 경우 이미지
            </summary>
        </member>
        <member name="F:Function.form.btnToggleButton.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:Function.form.btnToggleButton.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:Function.form.btnToggleButton.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="F:Function.form.usrEditLabel._isEditMode">
            <summary>
            현재 수정 모드 여부
            </summary>
        </member>
        <member name="P:Function.form.usrEditLabel.MarginLeft">
            <summary>
            컨트롤에 왼쪽 여백을 가져오거나 설정한다.
            </summary>
        </member>
        <member name="P:Function.form.usrEditLabel.MarginRight">
            <summary>
            컨트롤에 왼쪽 여백을 가져오거나 설정한다.
            </summary>
        </member>
        <member name="M:Function.form.usrEditLabel.label_DoubleClick(System.Object,System.EventArgs)">
            <summary>
            라벨 더블클릭 -> 항목 수정 처리
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Function.form.usrEditLabel.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:Function.form.usrEditLabel.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:Function.form.usrEditLabel.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="T:Function.form.TypeConverter_Properties">
            <summary>
            프로퍼티의 Arry처리된 항목을 디자이너 모드에서 볼수 있게 하는 컨버터 클래스
            </summary>
        </member>
        <member name="F:Function.form.usrBaseUserControl.evtSetMessage">
            <summary>
            메시지 처리 event
            </summary>
        </member>
        <member name="F:Function.form.usrBaseUserControl.evtProcException">
            <summary>
            에러 처리 event
            </summary>
        </member>
        <member name="M:Function.form.usrBaseUserControl.SetMessage(System.Boolean,System.String,System.Boolean)">
            <summary>
            메시지 처리 한다.
            </summary>
            <param name="isError"></param>
            <param name="strMessage"></param>
            <param name="isLog"></param>
        </member>
        <member name="M:Function.form.usrBaseUserControl.ProcException(System.Exception,System.String,System.Boolean)">
            <summary>
            에러 처리를 한다.
            </summary>
            <param name="ex"></param>
            <param name="strModuleName"></param>
        </member>
        <member name="F:Function.form.usrBaseUserControl.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:Function.form.usrBaseUserControl.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:Function.form.usrBaseUserControl.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="F:Function.form.usrEditLabelList.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:Function.form.usrEditLabelList.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:Function.form.usrEditLabelList.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="F:Function.form.UserControls.usrContentAlignment.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:Function.form.UserControls.usrContentAlignment.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:Function.form.UserControls.usrContentAlignment.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마세요.
            </summary>
        </member>
        <member name="P:Function.form.UserControls.usrPleaseWait.Text">
            <summary>
            안내 문구를 가지고 오거나 설정합니다.
            </summary>
        </member>
        <member name="F:Function.form.UserControls.usrPleaseWait.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:Function.form.UserControls.usrPleaseWait.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:Function.form.UserControls.usrPleaseWait.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마세요.
            </summary>
        </member>
        <member name="P:Function.form.usrGroupHeader.TextAlign">
            <summary>
            텍스트에 맞춤을 가져 오거나 설정 합니다.
            </summary>
        </member>
        <member name="P:Function.form.usrGroupHeader.Font">
            <summary>
            텍스트의 글꼴을 가져오거나 설정합니다.
            </summary>
        </member>
        <member name="P:Function.form.usrGroupHeader.ForeColor">
            <summary>
            텍스트의 글꼴섹을 가져오거나 설정합니다.
            </summary>
        </member>
        <member name="P:Function.form.usrGroupHeader.Text">
            <summary>
            텍스트를  가져오거나 설정합니다.
            </summary>
        </member>
        <member name="P:Function.form.usrGroupHeader.TEXT">
            <summary>
            텍스트를  가져오거나 설정합니다.
            </summary>
        </member>
        <member name="F:Function.form.usrGroupHeader.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:Function.form.usrGroupHeader.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:Function.form.usrGroupHeader.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="F:Function.form.usrInputBox._isSetLabelValue">
            <summary>
            라벨 값 변경 중 여부
            </summary>
        </member>
        <member name="P:Function.form.usrInputBox.LabelWidth">
            <summary>
            라벨 크기를 설정한다. -1이면 자동으로 너비를 설정한다.
            </summary>		
        </member>
        <member name="P:Function.form.usrInputBox.DLabel_FontAutoSize">
            <summary>
            데이터 라벨의 폰트 사이즈를 자동 저장 합니다.
            </summary>
        </member>
        <member name="P:Function.form.usrInputBox.DLabel_Blink">
            <summary>
            데이터 라벨의 깜박이는 여부
            </summary>
        </member>
        <member name="P:Function.form.usrInputBox.DLabel_BlinkColor">
            <summary>
            테이터 라벨 깜박이는 색깔을 지정하거나 가져 온다.
            </summary>
        </member>
        <member name="P:Function.form.usrInputBox.TextBox_AcceptsTab">
            <summary>
            여러 줄을 입력할 수 있는 TextBox 컨트롤에서 Tab 키를 누를 때 탭 순서에 따라 다음 컨트롤로 포커스를 이동하는 대신 해당 컨트롤에
            탭 문자를 입력할지 여부를 나타내는 값을 가져오거나 설정합니다.
            </summary>
        </member>
        <member name="P:Function.form.usrInputBox.TextBox_TabStopsLength">
            <summary>
            텍스트 박스에 탭문자 길이를 설정 한다.
            </summary>
        </member>
        <member name="P:Function.form.usrInputBox.ActualWidth">
            <summary>
            현재 컨트롤 실제 사이즈
            </summary>
        </member>
        <member name="P:Function.form.usrInputBox.TextBox_PasswordChar">
            <summary>
            한 줄만 입력할 수 있는 System.Windows.Forms.TextBox 컨트롤에서 암호 문자를 마스킹하는 데 사용되는 문자를 가져오거나 설정합니다.
            </summary>
        </member>
        <member name="P:Function.form.usrInputBox.Value">
            <summary>
            원본 값
            </summary>
        </member>
        <member name="E:Function.form.usrInputBox.Text_Changed">
            <summary>
            텍스트가 변경 되었을경우 발행 하는 이벤트
            </summary>
        </member>
        <member name="P:Function.form.usrInputBox.Text">
            <summary>
            표시 텍스트
            </summary>
        </member>
        <member name="M:Function.form.usrInputBox.Commit">
            <summary>
            userInputBox의 값을 Commit 한다. Text -> Value
            </summary>
        </member>
        <member name="E:Function.form.usrInputBox.ComboBoxDropDown">
            <summary>
            ComboBox의 드롭다운 부분이 표시될 때 발생합니다.
            </summary>
        </member>
        <member name="P:Function.form.usrInputBox.DataBindings">
            <summary>
            inputtype에 해당하는 DataBindings을 리턴한다.
            </summary>
        </member>
        <member name="P:Function.form.usrInputBox.TextType">
            <summary>
            textBox에서 입력가능한 타입설정
            </summary>
        </member>
        <member name="F:Function.form.usrInputBox.isChange">
            <summary>
            텍스트 변경 여부
            </summary>
        </member>
        <member name="F:Function.form.usrInputBox.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:Function.form.usrInputBox.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:Function.form.usrInputBox.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="E:Function.form.usrInputDatePicker.Text_Changed">
            <summary>
            텍스트가 변경 되었을경우 발행 하는 이벤트
            </summary>
        </member>
        <member name="P:Function.form.usrInputDatePicker.Format">
            <summary>
            표시되는 날짜 및 시간 서식을 가져오거나 설정합니다.
            </summary>
        </member>
        <member name="P:Function.form.usrInputDatePicker.CustomFormat">
            <summary>
            사용자가 설정한 날짜 및 시간 서식을 가져오거나 설정합니다.
            </summary>
        </member>
        <member name="F:Function.form.usrInputDatePicker.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:Function.form.usrInputDatePicker.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:Function.form.usrInputDatePicker.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="T:Function.form.usrMultiTextItem">
            <summary>
            textbox에 포커스를 가지면 항목 입력한 별도의 컨트롤을 보여 입력
            입력중 tab을 누르거나 컨트롤을 벗어나면 입력 되고 esc를 누르면 취소
            사용법 : Function.form.usrMultiTextItem.Set(textbox);
            입력된 데이터는 : Text.Split(new char[] { (char)3 });
            </summary>
        </member>
        <member name="M:Function.form.usrMultiTextItem.Set(System.Windows.Forms.TextBox)">
            <summary>
            textbox에 포커스를 가지면 항목 입력한 별도의 컨트롤을 보여 입력
            입력중 tab을 누르거나 컨트롤을 벗어나면 입력 되고 esc를 누르면 취소
            사용법 : Function.form.usrMultiTextItem.Set(textbox);
            입력된 데이터는 : Text.Split(new char[] { (char)3 });
            </summary>
            <param name="tBox"></param>
        </member>
        <member name="M:Function.form.usrMultiTextItem.BeginInit">
            <summary>
            코드로 자동 폼데이터 처리시 오류발행 할 수 있으므루 BeginInit ~ EndInit를 사용하여 방지 하여 준다.
            </summary>
        </member>
        <member name="P:Function.form.usrMultiTextItem.Seperator">
            <summary>
            항목간 구분자를 가져온다.
            </summary>
        </member>
        <member name="F:Function.form.usrMultiTextItem.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:Function.form.usrMultiTextItem.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:Function.form.usrMultiTextItem.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="P:Function.form.usrNumberInput.Number">
            <summary>
            현재 숫자를 가져오거나 설정한다.
            </summary>
        </member>
        <member name="F:Function.form.usrNumberInput.Value">
            <summary>
            초기 값(변경전 값)
            </summary>
        </member>
        <member name="E:Function.form.usrNumberInput.OnNumberChanged">
            <summary>
            넘버가 변경 되면 발생한다.
            </summary>
        </member>
        <member name="P:Function.form.usrNumberInput.ShowNumberText">
            <summary>
            입력 숫자 표시 여부
            </summary>
        </member>
        <member name="P:Function.form.usrNumberInput.ShowZero">
            <summary>
            값이 '0'일 경우 표시 여부를 가져오거나 설정한다.
            </summary>
        </member>
        <member name="P:Function.form.usrNumberInput.ShowOkButton">
            <summary>
            값이 '0'일 경우 표시 여부를 가져오거나 설정한다.
            </summary>
        </member>
        <member name="E:Function.form.usrNumberInput.BtnOk_Click">
            <summary>
            ok 버튼을 누르면 발생한다.
            </summary>
        </member>
        <member name="P:Function.form.usrNumberInput.ShowComma">
            <summary>
            콤마('.')표시 여부를 가져오거나 설정한다.
            </summary>
        </member>
        <member name="M:Function.form.usrNumberInput.txtNumber_FontResize">
            <summary>
            숫자표시창 폰트를 조정한다.
            </summary>
        </member>
        <member name="P:Function.form.usrNumberInput.MaxLength">
            <summary>
            입력 받을 숫자 길이 설정 (1~15)
            </summary>
        </member>
        <member name="M:Function.form.usrNumberInput.NumberClick(System.Object,System.EventArgs)">
            <summary>
            번호판 클릭..
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Function.form.usrNumberInput.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:Function.form.usrNumberInput.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:Function.form.usrNumberInput.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="T:Function.form.usrNumberInput2">
            <summary>
            숫자 입력 사용자 컨트롤 - 정해진 정수 자리수를 입력 받고 표시 한다.
            </summary>
        </member>
        <member name="P:Function.form.usrNumberInput2.NumberLength">
            <summary>
            입력 받을 숫자 자리 수
            </summary>
        </member>
        <member name="P:Function.form.usrNumberInput2.ShowNumber">
            <summary>
            입력받은 숫자 표시 여부
            </summary>
        </member>
        <member name="F:Function.form.usrNumberInput2.Value">
            <summary>
            입력된 값을 가지고 옵니다. null이면 입력 값이 없는것
            </summary>
        </member>
        <member name="E:Function.form.usrNumberInput2.OK_Click">
            <summary>
            확인 버튼 클릭
            </summary>
        </member>
        <member name="E:Function.form.usrNumberInput2.Cancel_Click">
            <summary>
            취소 버튼 클릭
            </summary>
        </member>
        <member name="M:Function.form.usrNumberInput2.#ctor">
            <summary>
            숫자 입력 사용자 컨트롤 - 정해진 정수 자리수를 입력 받고 표시 한다.
            </summary>
        </member>
        <member name="M:Function.form.usrNumberInput2.Buttons_Click(System.Object,System.EventArgs)">
            <summary>
            버튼 클릭 처리
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Function.form.usrNumberInput2.InitNumber">
            <summary>
            숫자 표시를 처리 한다.
            </summary>
        </member>
        <member name="F:Function.form.usrNumberInput2.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:Function.form.usrNumberInput2.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:Function.form.usrNumberInput2.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마세요.
            </summary>
        </member>
        <member name="P:Function.form.usrProgress.Title">
            <summary>
            타이틀 텍스트를 설정하거나 가져 옵니다.
            </summary>
        </member>
        <member name="P:Function.form.usrProgress.Detail">
            <summary>
            세부항목 텍스트를 가져오거나 설정합니다.
            </summary>
        </member>
        <member name="P:Function.form.usrProgress.EachMaxValue">
            <summary>
            개별항목 진행상태 최대 값을 설정하거나 가져 옵니다.
            </summary>
        </member>
        <member name="P:Function.form.usrProgress.EachValue">
            <summary>
            개별항목 진행상태 현재 값을 설정하거나 가져 옵니다.
            </summary>
        </member>
        <member name="P:Function.form.usrProgress.AllMaxValue">
            <summary>
            개별항목 진행상태 최대 값을 설정하거나 가져 옵니다.
            </summary>
        </member>
        <member name="P:Function.form.usrProgress.AllValue">
            <summary>
            개별항목 진행상태 현재 값을 설정하거나 가져 옵니다.
            </summary>
        </member>
        <member name="P:Function.form.usrProgress.isCancel">
            <summary>
            취소 여부를 가져 옵니다.
            </summary>
        </member>
        <member name="F:Function.form.usrProgress.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:Function.form.usrProgress.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:Function.form.usrProgress.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="M:Function.form.usrSimpleGrid.col_OnPropertiesChannged(System.Object,System.EventArgs)">
            <summary>
            컬럼의 프로퍼티 변경 시 처리...
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Function.form.usrSimpleGrid.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:Function.form.usrSimpleGrid.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:Function.form.usrSimpleGrid.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="F:Function.form.usrTreeView_Ch.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:Function.form.usrTreeView_Ch.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:Function.form.usrTreeView_Ch.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="T:Function.form.enFormPositionType">
            <summary>
            폼 위치 설정 타입
            </summary>
        </member>
        <member name="F:Function.form.enFormPositionType.MousePosition_Center">
            <summary>
            현재 마우스 위치가 폼의 중심으로 오도록 하여 위치를 잡는다.
            </summary>
        </member>
        <member name="F:Function.form.vari.circle_numbers">
            <summary>
            원안에 숫자 배열 0~9
            </summary>
        </member>
        <member name="F:Function.form.vari.circle_white">
            <summary>
            안이 비어있는 원
            </summary>
        </member>
        <member name="F:Function.form.vari.circle_black">
            <summary>
            안이 차있는 원
            </summary>
        </member>
        <member name="T:Function.delNoticePopUp_CMD">
            <summary>
            Notice PopUP 창에서 버튼(ex: 닫힘) 눌렸을 경우 처리 delegate
            </summary>
            <param name="f"></param>
            <param name="command"></param>
        </member>
        <member name="T:Function.delvoid_empt">
            <summary>
            빈 델리게이트
            </summary>
        </member>
        <member name="T:Function.clsFunction">
            <summary>
            Function 클래스에 추가로 기능 추가(프로젝트 위치는 Function.form)
            </summary>
        </member>
        <member name="M:Function.clsFunction.ShowMsg(System.Windows.Forms.IWin32Window,System.String,System.String,Function.form.frmMessage.enMessageType,System.Int32,System.Windows.Forms.DialogResult)">
            <summary>
            메시지 창을 띄운다..
            </summary>
            <param name="win"></param>
            <param name="strMsg1"></param>
            <param name="strMsg2"></param>
            <param name="enType"></param>
            <returns></returns>
        </member>
        <member name="M:Function.clsFunction.CheckPasswords(System.String,System.String)">
            <summary>
            패스워드 입력 창을 띄우고 암호를 입력 받는다
            </summary>
            <param name="title"></param>
            <param name="passwords"></param>
            <returns></returns>
        </member>
        <member name="M:Function.clsFunction.NoticePopUp(System.String,System.Int32,System.Drawing.ContentAlignment,System.Int32,System.Windows.Forms.Form,Function.delNoticePopUp_CMD)">
            <summary>
            화면에 메시지 창을 띄운다.
            </summary>
            <param name="msg">메시지</param>
            <param name="monitor">띄울 모니터 번호</param>
            <param name="align">창 위치</param>
            <param name="autoclose">자동을 닫힐 시간 ms, 0:자동으로 안 닫힘</param>
        </member>
        <member name="M:Function.clsFunction.WaitForm_Show(System.Windows.Forms.IWin32Window,System.String)">
            <summary>
            대기 요청창을 띄운다
            </summary>
            <param name="win"></param>
            <param name="msg"></param>
        </member>
        <member name="M:Function.clsFunction.WaitForm_Close">
            <summary>
            대기 요청 창을 닫는다.
            </summary>
        </member>
        <member name="M:Function.clsFunction.From_PositionSet(System.Windows.Forms.Form,Function.form.enFormPositionType)">
            <summary>
            폼의 위치를 조정 하여 준다.
            </summary>
            <param name="frm"></param>
            <param name="type">조정할 기준 타입</param>
        </member>
        <member name="M:Function.clsFunction.ScreenNumGet">
            <summary>
            화면(모니터) 번호를 구한다.-현재 마우스 위치 기준
            </summary>
            <returns></returns>
        </member>
        <member name="M:Function.clsFunction.ScreenNumGet(System.Int32,System.Int32)">
            <summary>
            화면(모니터) 번호를 구한다. 
            </summary>
            <returns>-1 이면 찾지 못한 경우</returns>
        </member>
        <member name="M:Function.clsFunction.StartUpPgm_isReg(System.String,System.String)">
            <summary>
            시작프로그램 등록 여부를 가져 옵니다.
            </summary>
            <param name="key">프로그램명</param>
            <param name="value">프로그램 실행 경로 ex)Application.ExecutablePath</param>
            <returns></returns>
        </member>
        <member name="M:Function.clsFunction.StartUpPgm_Reg(System.Boolean,System.String,System.String)">
            <summary>
            시작프로그램 등록 하거나 삭제 합니다.
            </summary>
            <param name="isReg">[true]등록 [false]해제</param>
            <param name="key">프로그램명</param>
            <param name="value">프로그램 실행 경로 ex)Application.ExecutablePath</param>
        </member>
        <member name="M:Function.clsFunction.InputBox_Commit(System.Windows.Forms.Control)">
            <summary>
            Container 및의 userInputBox의 값을 Commit 한다. Text -> Value
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Function.clsFunction.DataTable2CSV(System.Data.DataTable,System.String)">
            <summary>
            데이터 테이블을 csv파일로 출력을 한다.
            </summary>
            <param name="dt"></param>
            <param name="file"></param>
        </member>
        <member name="M:Function.console.LogWindow_Show">
            <summary>
            콘솔 로그 볼수 있는 창을 띠운다.
            </summary>
        </member>
        <member name="T:Function.frmMessage_del">
            <summary>
            메시지 창 생성 클래스
            </summary>
        </member>
        <member name="M:Function.frmMessage_del.SecCount(System.Object)">
            <summary>
            자동 닫힘 쓰레드...
            </summary>
            <param name="obj"></param>
        </member>
        <member name="F:Function.frmMessage_del.components">
            <summary>
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:Function.frmMessage_del.Dispose(System.Boolean)">
            <summary>
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:Function.frmMessage_del.InitializeComponent">
            <summary>
            디자이너 지원에 필요한 메서드입니다.
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
    </members>
</doc>
